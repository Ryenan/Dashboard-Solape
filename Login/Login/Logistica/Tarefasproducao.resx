<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>